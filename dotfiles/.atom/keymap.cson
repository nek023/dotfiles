# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# '.editor':
#   'enter': 'editor:newline'
#
# '.workspace':
#   'ctrl-P': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#

'.editor.vim-mode:not(.insert-mode)':
  '9': 'vim-mode:move-to-first-character-of-line'
  '0': 'vim-mode:move-to-last-character-of-line'
  'H': 'vim-mode:move-to-previous-word'
  'J': 'vim-mode:move-to-next-paragraph'
  'K': 'vim-mode:move-to-previous-paragraph'
  'L': 'vim-mode:move-to-next-word'

'.editor.vim-mode-plus:not(.insert-mode)':
  '9': 'vim-mode-plus:move-to-first-character-of-line'
  '0': 'vim-mode-plus:move-to-last-character-of-line'
  'H': 'vim-mode-plus:move-to-previous-word'
  'J': 'vim-mode-plus:move-to-next-paragraph'
  'K': 'vim-mode-plus:move-to-previous-paragraph'
  'L': 'vim-mode-plus:move-to-next-word'

'.workspace':
  'ctrl-alt-s': 'split-diff:toggle'
  'ctrl-alt-l': 'linter:toggle'
  'ctrl-alt-p': 'linter:togglePanel'
'.editor':
  'ctrl-alt-[': 'linter:previous-error'
  'ctrl-alt-]': 'linter:next-error'
